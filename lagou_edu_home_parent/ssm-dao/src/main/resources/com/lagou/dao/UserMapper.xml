<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lagou.dao.UserMapper">

    <!-- 用户分页&多条件查询：根据用户名称（手机号）和注册时间进行组合查询 -->
    <select id="findAllUserByPage" parameterType="com.lagou.domain.UserVO" resultType="com.lagou.domain.User">
        select * from user
        <where>
            <if test="username != null and username != ''">
                and name = #{username}
            </if>
            <if test="startCreateTime != null and endCreateTime != null">
                and create_time BETWEEN #{startCreateTime} AND #{endCreateTime}
            </if>
        </where>
    </select>

    <!--
        登录：根据用户名（实际是手机号）查询用户信息
       public User login(User user)
    -->
    <select id="login" parameterType="com.lagou.domain.User" resultType="com.lagou.domain.User">
        select * from user where phone = #{phone}
    </select>

    <!-- 分配角色（回显）：根据用户ID查询与该用户关联的所有角色信息 -->
    <select id="findUserRoleById" parameterType="int" resultType="com.lagou.domain.Role">
        SELECT
          r.*
        FROM
          roles r
          INNER JOIN user_role_relation ur
          ON r.id = ur.role_id
        WHERE user_id = #{userId}
    </select>

    <!-- 根据角色ID清空中间表中对应的关联关系 -->
    <delete id="deleteUserContextRole" parameterType="int">
        delete from user_role_relation where user_id = #{userId}
    </delete>

    <!-- 分配角色：向中间表添加记录 -->
    <insert id="userContextRole" parameterType="com.lagou.domain.User_Role_relation">
        insert into user_role_relation values(null,#{userId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedby})
    </insert>

    <!-- 动态菜单展示 -->
    <!--
        根据角色ID集合，查询对应的所有顶级菜单（分步查询1）
        public List<Menu> findParentMenuByRoleIds(List<Integer> roleIds);
    -->
    <select id="findParentMenuByRoleIds" parameterType="java.util.List" resultType="com.lagou.domain.Menu">
        SELECT
          DISTINCT m.*
        FROM
          menu m
          INNER JOIN role_menu_relation rm
            ON m.id = rm.menu_id
        WHERE m.parent_id = -1 AND rm.role_id IN
        <foreach collection="list" item="roleId" open="(" close=")" separator=", ">
            #{roleId}
        </foreach>
        ORDER BY m.order_num
    </select>

    <!--
        再对顶级菜单关联的子菜单进行关联查询（分步查询2）
        public List<Menu> findSubMenuByPid(Integer pid);
    -->
    <select id="findSubMenuByPid" parameterType="int" resultType="com.lagou.domain.Menu">
        SELECT * FROM menu WHERE parent_id = #{pid}
    </select>

    <!--
        根据角色ID集合，查询对应的所有资源
        public List<Resource> findResourceByRoleIds(List<Integer> roleIds);
    -->
    <select id="findResourceByRoleIds" parameterType="list" resultType="com.lagou.domain.Resource">
        SELECT
          DISTINCT r.*
        FROM
          resource r
          INNER JOIN role_resource_relation rr
            ON r.id = rr.resource_id
          INNER JOIN roles ro
            ON ro.id = rr.role_id
        WHERE rr.role_id IN
        <foreach collection="list" item="roleId" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </select>

</mapper>